{"version":3,"sources":["service/PersonService.js","components/CrudDemo.js","components/PersonDetails.js","components/UpdateThePerson.js","components/DemoRouter.js","index.js"],"names":["baseURL","PersonService","findAll","a","axios","get","then","res","getPersonById","id","savePerson","data","post","updatePerson","put","deletePersonById","delete","CrudDemo","useState","persons","setPersons","value","type","message","setMessage","reload","setReload","useEffect","console","log","status","Table","TableHeader","TableAction","props","history","useHistory","className","onClick","push","TableRow","map","person","ingredientId","ingredientName","Form","useForm","register","handleSubmit","reset","errors","formState","onSubmit","required","placeholder","firstName","lastName","email","PersonDetails","params","useParams","ingredient","setIngredient","UpdateThePerson","title","setPerson","Welcome","Home","About","Person","NotFound","Header","to","DemoRouter","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"yNAIMA,EAAU,yCA0BDC,E,sCAtBXC,Q,sBAAU,sBAAAC,EAAA,sEACKC,IAAMC,IAAIL,GAASM,MAAK,SAAAC,GAAG,OAAIA,KADpC,mF,KAIVC,c,uCAAgB,WAAOC,GAAP,SAAAN,EAAA,sEACCC,IAAMC,IAAIL,EAAUS,GAAIH,MAAK,SAAAC,GAAG,OAAIA,KADrC,mF,2DAIhBG,W,uCAAa,WAAOC,GAAP,SAAAR,EAAA,sEACIC,IAAMQ,KAAKZ,EAASW,GAAML,MAAK,SAAAC,GAAG,OAAIA,KAD1C,mF,2DAIbM,a,uCAAe,WAAOF,GAAP,SAAAR,EAAA,sEACEC,IAAMU,IAAId,EAASW,GAAML,MAAK,SAAAC,GAAG,OAAIA,KADvC,mF,2DAIfQ,iB,uCAAmB,WAAON,GAAP,SAAAN,EAAA,sEACFC,IAAMY,OAAOhB,EAAUS,GAAIH,MAAK,SAAAC,GAAG,OAAIA,KADrC,mF,8DC+IRU,EAlKE,WACb,MAA6BC,mBAAS,IAAtC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAAS,CAACG,MAAO,GAAIC,KAAM,KAAzD,mBAAOC,EAAP,KAAgBC,EAAhB,KAEA,EAA4BN,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAGAC,qBAAU,YAEgB,IAAI1B,GACZC,UAAUI,MAAK,SAACC,GAC1BqB,QAAQC,IAAItB,GACM,MAAfA,EAAIuB,QACHV,EAAWb,EAAII,MACfa,EAAW,CAACH,MAAO,qBAAsBC,KAAM,aAG/CE,EAAW,CAACH,MAAO,uBAAwBC,KAAM,gBAK3D,CAACG,IAEH,IAAMM,EAAQ,WAEV,IAAMC,EAAc,WAChB,OACI,gCACI,+BACI,oCACA,4CAMVC,EAAc,SAACC,GAEjB,IAAMC,EAAUC,cAyBhB,OACA,gCACI,wBAAQd,KAAK,SAASe,UAAU,kBAAkBC,QAzBrC,WACfH,EAAQI,KAAR,mBAAyBL,EAAMzB,MAwB7B,qBACA,wBAAQa,KAAK,SAASe,UAAU,qBAAqBC,QAtBtC,YAEC,IAAIrC,GACZc,iBAAiBmB,EAAMzB,IAAIH,MAAK,SAAAC,GAClB,MAAfA,EAAIuB,QACHN,EAAW,CAACH,MAAO,iCAAmCa,EAAMzB,GAAK,IAAKa,KAAM,YAE5EI,GAAWD,IAEXD,EAAW,CAACH,MAAO,cAAed,EAAIuB,OAAQR,KAAM,eAa5D,oBACA,wBAAQA,KAAK,SAASe,UAAU,kBAAkBC,QARvC,WACXH,EAAQI,KAAR,mBAAyBL,EAAMzB,MAO/B,sBAIF+B,EAAW,WACb,OACI,gCAEIrB,EAAQsB,KAAK,SAACC,GAAD,OACT,+BACI,6BAAKA,EAAOC,eACZ,6BAAKD,EAAOE,iBAEZ,6BAAI,cAACX,EAAD,CAAaxB,GAAIiC,EAAOC,mBAJvBD,EAAOC,oBAYhC,OACI,qBAAKN,UAAU,YAAf,SACI,wBAAOA,UAAU,sBAAjB,UACI,cAACL,EAAD,IACA,cAACQ,EAAD,UAMVK,EAAO,WAET,MAA8DC,cAAvDC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAAmBC,EAAlD,EAAsCC,UAAYD,OAqBlD,OACI,cAAC,WAAD,UACI,uBAAMb,UAAU,uBAAuBe,SAAUJ,GArBtC,SAACrC,GAChBiB,QAAQC,IAAIlB,IAEI,IAAIV,GACZS,WAAWC,GAAML,MAAK,SAAAC,GACR,MAAfA,EAAIuB,QAEHN,EAAW,CAACH,MAAO,mCAAqCd,EAAII,KAAKF,GAAKa,KAAM,YAE3EI,GAAWD,IAGZD,EAAW,CAACH,MAAO,SAAUd,EAAIuB,OAAQR,KAAM,iBASnD,UACI,sBAAKe,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,YAAa,CAACM,UAAU,KAAjF,IAAyFC,YAAY,qBACpGJ,EAAOK,WAAa,sBAAMlB,UAAU,cAAhB,uCAEzB,sBAAKA,UAAU,QAAf,UACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,WAAY,CAACM,UAAU,KAAhF,IAAwFC,YAAY,oBACnGJ,EAAOM,UAAY,sBAAMnB,UAAU,cAAhB,yCAG5B,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,MAAf,UACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,QAAS,CAACM,UAAU,KAA7E,IAAqFC,YAAY,iBAChGJ,EAAOO,OAAS,sBAAMpB,UAAU,cAAhB,qCAGzB,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,MAAf,SACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,UAAzD,IAAmEO,YAAY,qBAGvF,wBAAQhC,KAAK,SAASe,UAAU,kBAAhC,iBACA,wBAAQf,KAAK,SAASe,UAAU,iBAAiBC,QAAS,kBAAKW,KAA/D,yBAMhB,OACI,sBAAKZ,UAAU,YAAf,UACKd,GAAW,qBAAKc,UAAW,eAAiBd,EAAQD,KAAzC,SAAgDC,EAAQF,QACpE,cAACwB,EAAD,IACA,cAACd,EAAD,QCnHG2B,EAzCO,WAClB,IAAMC,EAASC,cACf,EAAoC1C,mBAAS,CAACyB,aAAc,EAAGC,eAAgB,KAA/E,mBAAOiB,EAAP,KAAmBC,EAAnB,KACA,EAA8B5C,mBAAS,CAACG,MAAO,GAAIC,KAAM,KAAzD,mBAAgBE,GAAhB,WACMW,EAAUC,cAiBhB,OAfAT,qBAAU,YACgB,IAAI1B,GACZO,cAAcmD,EAAOlD,IAAIH,MAAK,SAAAC,GAExCqB,QAAQC,IAAI,UAAYtB,GACN,MAAfA,EAAIuB,QACHF,QAAQC,IAAItB,EAAII,MAChBmD,EAAcvD,EAAII,OAGlBa,EAAW,CAACH,MAAO,cAAed,EAAIuB,OAAQR,KAAM,gBAG7D,IAGC,qBAAKe,UAAU,YAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,iCAAf,4BAGA,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,oBAAmCwB,EAAWlB,gBAC9C,oBAAGN,UAAU,YAAb,iBAA8BwB,EAAWlB,gBACzC,oBAAGN,UAAU,YAAb,mBAAgCwB,EAAWjB,qBAG/C,qBAAKP,UAAU,cAAf,SACI,wBAAQA,UAAU,yBAAyBC,QAAS,kBAAKH,EAAQI,KAAK,UAAtE,0BC4DLwB,EA5FS,WAEpB,IAAMJ,EAASC,cACf,EAA4B1C,mBAAS,CAACT,GAAI,EAAG8C,UAAW,GAAIC,SAAU,GAAGC,MAAO,GAAIO,MAAO,KAA3F,mBAAOtB,EAAP,KAAeuB,EAAf,KACA,EAA8B/C,mBAAS,CAACG,MAAO,GAAIC,KAAM,KAAzD,mBAAgBE,GAAhB,WACMW,EAAUC,cAChB,EAA4BlB,oBAAS,GAArC,mBAAOO,EAAP,KAAeC,EAAf,KAGAC,qBAAU,YACgB,IAAI1B,GACZO,cAAcmD,EAAOlD,IAAIH,MAAK,SAAAC,GAExCqB,QAAQC,IAAI,UAAYtB,GACN,MAAfA,EAAIuB,QACHF,QAAQC,IAAItB,EAAII,MAChBsD,EAAU1D,EAAII,OAGda,EAAW,CAACH,MAAO,cAAed,EAAIuB,OAAQR,KAAM,gBAG7D,IAEH,IAAMuB,EAAO,WAET,MAA8DC,cAAvDC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,aAAcC,EAA/B,EAA+BA,MAAmBC,EAAlD,EAAsCC,UAAYD,OA4BlD,OACI,cAAC,WAAD,UACI,uBAAMb,UAAU,uBAAuBe,SAAUJ,GA5BtC,SAACrC,GAChBiB,QAAQC,IAAIlB,GACZA,EAAKF,GAAKiC,EAAOjC,GACjBmB,QAAQC,IAAIlB,IAEI,IAAIV,GACZY,aAAaF,GAAML,MAAK,SAAAC,GACV,MAAfA,EAAIuB,QAEHN,EAAW,CAACH,MAAO,mCAAqCd,EAAII,KAAKF,GAAKa,KAAM,YAE3EI,GAAWD,IAGZD,EAAW,CAACH,MAAO,SAAUd,EAAIuB,OAAQR,KAAM,cAMvDa,EAAQI,KAAR,aAQI,UACI,sBAAKF,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,YAAa,CAACM,UAAU,KAAjF,IAAyFC,YAAaZ,EAAOa,aAC5GL,EAAOK,WAAa,sBAAMlB,UAAU,cAAhB,uCAEzB,sBAAKA,UAAU,QAAf,UACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,WAAY,CAACM,UAAU,KAAhF,IAAwFC,YAAaZ,EAAOc,YAC3GN,EAAOM,UAAY,sBAAMnB,UAAU,cAAhB,yCAG5B,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,MAAf,UACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,QAAS,CAACM,UAAU,KAA7E,IAAqFC,YAAaZ,EAAOe,SACxGP,EAAOO,OAAS,sBAAMpB,UAAU,cAAhB,qCAGzB,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,MAAf,SACI,+CAAOf,KAAK,OAAOe,UAAU,gBAAmBU,EAAS,UAAzD,IAAmEO,YAAaZ,EAAOsB,aAG/F,wBAAQ1C,KAAK,SAASe,UAAU,kBAAhC,oBACA,wBAAQf,KAAK,SAASe,UAAU,iBAAiBC,QAAS,kBAAKW,KAA/D,yBAMhB,OACI,8BACG,cAACJ,EAAD,OChELqB,EAAU,kBAAM,8CAChBC,EAAO,kBAAM,2CACbC,EAAQ,kBAAM,+CACdC,EAAS,kBAAM,6CACfC,EAAW,kBAAM,gDAEjBC,EAAS,WACf,OACI,qBAAKlC,UAAU,8CAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,qBAAIA,UAAU,qBAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAemC,GAAG,QAAlC,oBAEJ,oBAAInC,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAemC,GAAG,IAAlC,uBAEJ,oBAAInC,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAemC,GAAG,UAAlC,sBAEJ,oBAAInC,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAemC,GAAG,SAAlC,wBAEJ,oBAAInC,UAAU,WAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAemC,GAAG,QAAlC,uBAGR,+BACI,cAAC,IAAD,CAAMnC,UAAU,kBAAkBmC,GAAG,UAArC,6BAQDC,EA7DI,WAEf,OACI,cAAC,WAAD,UACI,eAAC,IAAD,WACI,cAAC,EAAD,IACA,qBAAKpC,UAAU,YAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,cAAC,IAAD,CAAOS,KAAK,QAAQC,UAAWT,IAC/B,cAAC,IAAD,CAAOQ,KAAK,UAAUC,UAAWP,IACjC,cAAC,IAAD,CAAOM,KAAK,SAASC,UAAWR,IAChC,cAAC,IAAD,CAAOO,KAAK,QAAQC,UAAW3D,IAC/B,cAAC,IAAD,CAAO0D,KAAK,eAAeC,UAAWlB,IACtC,cAAC,IAAD,CAAOiB,KAAK,eAAeC,UAAWb,IAEtC,cAAC,IAAD,CAAOa,UAAWN,e,MCjB1CO,IAASC,OAAQ,cAAC,EAAD,IAAeC,SAASC,eAAe,W","file":"static/js/main.6687aeab.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n//const baseURL = \"http://localhost:8080/api/v1/person/\";\r\n\r\nconst baseURL = \"http://localhost:8080/api/ingredients/\"\r\n\r\nclass PersonService {\r\n\r\n    findAll = async () => {\r\n      return await axios.get(baseURL).then(res => res);\r\n    };\r\n\r\n    getPersonById = async (id) => {\r\n        return await axios.get(baseURL + id).then(res => res);\r\n    };\r\n\r\n    savePerson = async (data) => {\r\n        return await axios.post(baseURL, data).then(res => res);\r\n    };\r\n\r\n    updatePerson = async (data) => {\r\n        return await axios.put(baseURL, data).then(res => res);\r\n    };\r\n\r\n    deletePersonById = async (id) => {\r\n        return await axios.delete(baseURL + id).then(res => res);\r\n    };\r\n\r\n}\r\n\r\nexport default PersonService;","import React, { Fragment, useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\nimport PersonService from '../service/PersonService';\r\n\r\nconst CrudDemo = () => {\r\n    const [persons,setPersons] = useState([]);\r\n    const [message, setMessage] = useState({value: '', type: ''});\r\n\r\n    const [reload, setReload] = useState(false);\r\n\r\n    // useEffect \r\n    useEffect(()=>{\r\n        // call API\r\n        const personService = new PersonService();\r\n        personService.findAll().then((res)=>{\r\n            console.log(res);\r\n            if(res.status === 200){\r\n                setPersons(res.data);\r\n                setMessage({value: 'Operation is Done!', type: 'success'});\r\n            } else {\r\n                // display error message\r\n                setMessage({value: 'Operation is Failed!', type: 'danger'});\r\n            }\r\n        });\r\n\r\n        // update the state\r\n    },[reload]);\r\n\r\n    const Table = () => {\r\n\r\n        const TableHeader = ()=> {\r\n            return (\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                    </tr>\r\n                </thead>\r\n                )\r\n        };\r\n\r\n        const TableAction = (props)=> {\r\n            \r\n            const history = useHistory();\r\n\r\n            const showData = () => {\r\n              history.push(`/details/${props.id}`);\r\n            }\r\n\r\n            const deleteById = () => {\r\n                // step 1 = define service class\r\n                const service = new PersonService();\r\n                service.deletePersonById(props.id).then(res => {\r\n                    if(res.status === 204 ){\r\n                        setMessage({value: 'Delete Operation is Done! (id:' + props.id + ')', type: 'success'});\r\n                        // reload fetch all person\r\n                        setReload(!reload);\r\n                    }else {\r\n                        setMessage({value: 'API Error: '+ res.status, type: 'danger'})\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            const update = () => {\r\n                history.push(`/updates/${props.id}`);\r\n            }\r\n\r\n            return (\r\n            <div>\r\n                <button type=\"button\" className=\"btn btn-primary\" onClick={showData} >Details</button>\r\n                <button type=\"button\" className=\"btn btn-danger m-2\" onClick={deleteById}>Delete</button>\r\n                <button type=\"button\" className=\"btn btn-warning\" onClick={update}>Edit</button>\r\n            </div>)\r\n        };\r\n\r\n        const TableRow = ()=> {\r\n            return (\r\n                <tbody>\r\n                   {\r\n                    persons.map( (person)=> (\r\n                        <tr key={person.ingredientId}>\r\n                            <td>{person.ingredientId}</td>\r\n                            <td>{person.ingredientName}</td>\r\n                            \r\n                            <td><TableAction id={person.ingredientId} /></td>\r\n                        </tr>\r\n                    ))   \r\n                   }                     \r\n                </tbody>\r\n            )\r\n        };\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <table className=\"table table-striped\">\r\n                    <TableHeader/>\r\n                    <TableRow />\r\n                </table>\r\n            </div>\r\n            );\r\n    };\r\n\r\n    const Form = () => {\r\n\r\n        const {register, handleSubmit, reset, formState: {errors} } = useForm();\r\n\r\n        const savePerson = (data) => {\r\n            console.log(data);\r\n            // call  API\r\n            const service = new PersonService();\r\n            service.savePerson(data).then(res => {\r\n                if(res.status === 201){\r\n                    // show message\r\n                    setMessage({value: 'Operation is done for person Id:' + res.data.id , type: 'success'});\r\n                     // update the state = reload the useEffect\r\n                     setReload(!reload);\r\n                }else {\r\n                    // show error message\r\n                    setMessage({value: 'Error:'+ res.status, type: 'danger'});\r\n                }\r\n            });\r\n           \r\n        }\r\n\r\n\r\n        return(\r\n            <Fragment>\r\n                <form className=\"form-control m-2 p-3\" onSubmit={handleSubmit(savePerson)}>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-6\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"firstName\", {required: true})} placeholder=\"Enter FirstName\" />\r\n                            {errors.firstName && <span className=\"text-danger\">FirstName is Required!</span>}\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"lastName\", {required: true})} placeholder=\"Enter LastName\" />\r\n                            {errors.lastName && <span className=\"text-danger\">LastName is Required!</span>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"email\", {required: true})} placeholder=\"Enter Email\" />\r\n                            {errors.email && <span className=\"text-danger\">Email is Required!</span>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"title\")} placeholder=\"Enter Title\" />\r\n                        </div>\r\n                    </div>  \r\n                    <button type=\"submit\" className=\"btn btn-success\">Add</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={()=> reset() }>Reset</button>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {message && <div className={'alert alert-' + message.type}>{message.value}</div> }\r\n            <Form />\r\n            <Table />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CrudDemo;","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport PersonService from '../service/PersonService';\r\n\r\n///\r\n\r\nconst PersonDetails = () => {\r\n    const params = useParams();\r\n    const [ingredient, setIngredient] = useState({ingredientId: 0, ingredientName: ''});\r\n    const [message, setMessage] = useState({value: '', type: ''});\r\n    const history = useHistory();\r\n\r\n    useEffect(()=> {\r\n        const personService = new PersonService();\r\n        personService.getPersonById(params.id).then(res => {\r\n            //update state\r\n            console.log(\"PERSON:\" , res);\r\n            if(res.status === 200){\r\n                console.log(res.data);\r\n                setIngredient(res.data);\r\n            }else {\r\n                // update error state\r\n                setMessage({value: 'API ERROR: '+ res.status, type: 'danger'})\r\n            }\r\n        });\r\n    }, []);\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"card\">\r\n                <div className=\"card-header bg-dark text-white\">\r\n                    Person Details\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Title: {ingredient.ingredientId}</h5>\r\n                    <p className=\"card-text\">ID: {ingredient.ingredientId}</p>\r\n                    <p className=\"card-text\">Name: {ingredient.ingredientName}</p>\r\n                    \r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <button className=\"btn btn-outline-danger\" onClick={()=> history.push('/crud')}>Back</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PersonDetails;","import React, {Fragment, useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport PersonService from '../service/PersonService';\r\n\r\nimport { useForm } from 'react-hook-form';\r\n\r\n    \r\n\r\nconst UpdateThePerson = () => {\r\n\r\n    const params = useParams();\r\n    const [person, setPerson] = useState({id: 0, firstName: '', lastName: '',email: '', title: ''});\r\n    const [message, setMessage] = useState({value: '', type: ''});\r\n    const history = useHistory();\r\n    const [reload, setReload] = useState(false);\r\n\r\n\r\n    useEffect(()=> {\r\n        const personService = new PersonService();\r\n        personService.getPersonById(params.id).then(res => {\r\n            //update state\r\n            console.log(\"PERSON:\" , res);\r\n            if(res.status === 200){\r\n                console.log(res.data);\r\n                setPerson(res.data);\r\n            }else {\r\n                // update error state\r\n                setMessage({value: 'API ERROR: '+ res.status, type: 'danger'})\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const Form = () => {\r\n\r\n        const {register, handleSubmit, reset, formState: {errors} } = useForm();\r\n\r\n        const savePerson = (data) => {\r\n            console.log(data);\r\n            data.id = person.id;\r\n            console.log(data);\r\n            // call  API\r\n            const service = new PersonService();\r\n            service.updatePerson(data).then(res => {\r\n                if(res.status === 201){\r\n                    // show message\r\n                    setMessage({value: 'Operation is done for person Id:' + res.data.id , type: 'success'});\r\n                     // update the state = reload the useEffect\r\n                     setReload(!reload);\r\n                }else {\r\n                    // show error message\r\n                    setMessage({value: 'Error:'+ res.status, type: 'danger'});\r\n                }\r\n            });\r\n\r\n            \r\n                //history.push(`/details/${data.id}`);\r\n            history.push(`/crud/`);\r\n            \r\n           \r\n        }\r\n\r\n\r\n        return(\r\n            <Fragment>\r\n                <form className=\"form-control m-2 p-3\" onSubmit={handleSubmit(savePerson)}>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col-6\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"firstName\", {required: true})} placeholder={person.firstName} />\r\n                            {errors.firstName && <span className=\"text-danger\">FirstName is Required!</span>}\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"lastName\", {required: true})} placeholder={person.lastName} />\r\n                            {errors.lastName && <span className=\"text-danger\">LastName is Required!</span>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"email\", {required: true})} placeholder={person.email} />\r\n                            {errors.email && <span className=\"text-danger\">Email is Required!</span>}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mb-3\">\r\n                        <div className=\"col\">\r\n                            <input type=\"text\" className=\"form-control\" {...register(\"title\")} placeholder={person.title} />\r\n                        </div>\r\n                    </div>  \r\n                    <button type=\"submit\" className=\"btn btn-success\">Update</button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" onClick={()=> reset() }>Reset</button>\r\n                </form>\r\n            </Fragment>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div>\r\n           <Form/> \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateThePerson;","import React, { Fragment } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport CrudDemo from './CrudDemo';\r\nimport PersonDetails from './PersonDetails';\r\nimport UpdateThePerson from './UpdateThePerson';\r\n\r\nconst DemoRouter = () => {\r\n\r\n    return (\r\n        <Fragment>\r\n            <Router>\r\n                <Header />\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\" component={Welcome} />\r\n                        <Route path=\"/home\" component={Home} />\r\n                        <Route path=\"/person\" component={Person} />\r\n                        <Route path=\"/about\" component={About} />\r\n                        <Route path=\"/crud\" component={CrudDemo} />\r\n                        <Route path=\"/details/:id\" component={PersonDetails} />\r\n                        <Route path=\"/updates/:id\" component={UpdateThePerson} />\r\n\r\n                        <Route component={NotFound} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </Fragment>\r\n    );\r\n\r\n};\r\n\r\nconst Welcome = () => <b>Welcome Page</b>;\r\nconst Home = () => <b>Home Page</b>;\r\nconst About = () => <b>About Us Page</b>;\r\nconst Person = () => <b>Person Page</b>;\r\nconst NotFound = () => <b>Page Not Found</b>;\r\n\r\nconst Header = () => {\r\nreturn (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n        <div className=\"container-fluid\">\r\n            <ul className=\"navbar-nav me-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"navbar-brand\" to=\"/home\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Welcome</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"navbar-brand\" to=\"/person\">Person</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"navbar-brand\" to=\"/about\">About Us</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"navbar-brand\" to=\"/crud\">CRUD</Link>\r\n                </li>\r\n            </ul>\r\n            <form>\r\n                <Link className=\"btn btn-primary\" to=\"/person\">Sign Up</Link>\r\n            </form>\r\n        </div>\r\n\r\n    </nav>\r\n)\r\n};\r\n\r\nexport default DemoRouter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport DemoRouter from './components/DemoRouter';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render( <DemoRouter/> ,document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}